// Code generated by entc, DO NOT EDIT.

package ent

import "context"

func (l *Link) Owner(ctx context.Context) (*User, error) {
	result, err := l.Edges.OwnerOrErr()
	if IsNotLoaded(err) {
		result, err = l.QueryOwner().Only(ctx)
	}
	return result, MaskNotFound(err)
}

func (l *Link) Users(ctx context.Context) ([]*User, error) {
	result, err := l.Edges.UsersOrErr()
	if IsNotLoaded(err) {
		result, err = l.QueryUsers().All(ctx)
	}
	return result, err
}

func (u *User) Links(ctx context.Context) ([]*Link, error) {
	result, err := u.Edges.LinksOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryLinks().All(ctx)
	}
	return result, err
}

func (u *User) Bookmarks(ctx context.Context) ([]*Link, error) {
	result, err := u.Edges.BookmarksOrErr()
	if IsNotLoaded(err) {
		result, err = u.QueryBookmarks().All(ctx)
	}
	return result, err
}
